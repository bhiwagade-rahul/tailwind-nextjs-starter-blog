# Optimized production Dockerfile
FROM node:20-alpine AS base

# Install system dependencies
RUN apk add --no-cache curl

# Enable Corepack and prepare Yarn
RUN corepack enable && corepack prepare yarn@3.6.1 --activate

WORKDIR /app

# Copy package files first for better layer caching
COPY package.json yarn.lock .yarnrc.yml ./
COPY .yarn .yarn

# Install all dependencies
RUN yarn install --immutable

# Copy source code
COPY . .

# Build the application
ENV NODE_ENV=production
RUN yarn build

# Production stage - copy only what's needed
FROM node:20-alpine AS production

# Install curl for health checks
RUN apk add --no-cache curl

# Enable Corepack and prepare Yarn
RUN corepack enable && corepack prepare yarn@3.6.1 --activate

# Set production environment
ENV NODE_ENV=production
ENV NEXT_TELEMETRY_DISABLED=1
ENV PORT=3001

WORKDIR /app

# Copy package files and install only production dependencies
COPY package.json yarn.lock .yarnrc.yml ./
COPY .yarn .yarn
RUN yarn install --immutable

# Copy built application from base stage
COPY --from=base /app/.next ./.next
COPY --from=base /app/public ./public
COPY --from=base /app/next.config.js ./next.config.js
COPY --from=base /app/package.json ./package.json
COPY --from=base /app/. .

# Expose port
EXPOSE 3001

# Health check
HEALTHCHECK --interval=30s --timeout=3s --start-period=5s --retries=3 \
    CMD curl -f http://localhost:3001/api/health || exit 1

# Start the application
CMD ["yarn", "serve"]
